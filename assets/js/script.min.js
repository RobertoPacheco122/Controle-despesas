(()=>{"use strict";class e{constructor(e,t,n){this.actual=document.querySelector(e),this.income=document.querySelector(t),this.expense=document.querySelector(n)}static cleanAmount(e){return+e.replace(/([\sR$]+)/g,"")}getBalanceInfo(){return{actual:e.cleanAmount(this.actual.innerText),income:e.cleanAmount(this.income.innerText),expense:e.cleanAmount(this.expense.innerText)}}updateIncomeAmount(t,n){const a=e.cleanAmount(t),c=this.getBalanceInfo();let i,s;"increase"===n?(i=(a+c.income).toFixed(2),s=(a+c.actual).toFixed(2)):"decrease"===n&&(i=(c.income-a).toFixed(2),s=(c.actual-a).toFixed(2)),this.income.innerText=`R$ ${i}`,this.actual.innerText=`R$ ${s}`}updateExpenseAmount(t,n){const a=e.cleanAmount(t),c=this.getBalanceInfo();let i,s;"increase"===n?(i=(a+-c.expense).toFixed(2),s=(a+c.actual).toFixed(2)):"decrease"===n&&(i=c.expense+a,s=(c.actual-a).toFixed(2)),this.expense.innerText=`R$ ${Math.abs(i).toFixed(2)}`,this.actual.innerText=`R$ ${s}`}}const t=document.querySelector(".main__list");class n{static transactionsAcc=0;constructor(t,a,c){this.name=t,this.amount=a,this.balance=new e(".main__balance",".main__income",".main__expenses"),void 0===c?(this.id=n.transactionsAcc,n.transactionsAcc+=1):this.id=c}static retrieveTransactions(){Object.keys(localStorage).forEach((e=>{const t=JSON.parse(localStorage[e]),{name:a,amount:c,id:i}=t;new n(a,c,i).init()}))}static excludeTransactionFromLocal(e){localStorage.removeItem(e)}getTransactionType(){return this.amount.includes("-")?"expense":"income"}getFormatedAmount(){return"income"===this.getTransactionType()?`+ R$${this.amount}`:this.amount.replace("-","- R$")}createTransactionCard(){const e=document.createElement("li");return e.classList.add("main__transaction--card"),e.innerHTML=`\n      <div class="main--transaction--content">\n        <p class="main__name--transaction">${this.name}</p>\n        <span class="main__value--transaction">${this.getFormatedAmount(this.getTransactionType())}</span>\n      </div>\n      <div class="main--transaction--color ${this.getTransactionType()}"></div>\n    `,e}addTransactionCardEvent(e){e.addEventListener("dblclick",(e=>{const t=e.currentTarget.querySelector(".main__value--transaction").innerText;"income"===this.getTransactionType()?this.balance.updateIncomeAmount(t,"decrease"):this.balance.updateExpenseAmount(t,"decrease"),e.currentTarget.remove(),n.excludeTransactionFromLocal(this.id)}))}addTransactionIntoDom(){const e=this.createTransactionCard();t.appendChild(e),"income"===this.getTransactionType()?this.balance.updateIncomeAmount(this.amount,"increase"):this.balance.updateExpenseAmount(this.amount,"increase"),this.addTransactionCardEvent(e)}addTransactionIntoLocal(){localStorage.setItem(this.id,JSON.stringify(this))}init(){return this.name&&this.amount&&(this.addTransactionIntoDom(),this.addTransactionIntoLocal()),this}}const a=document.querySelector(".main__button--submit");n.retrieveTransactions(),a.addEventListener("click",(function(e){e.preventDefault();const t=document.querySelector("#name"),a=document.querySelector("#value");new n(t.value,a.value).init(),function(...e){e.forEach((e=>{e.value=""}))}(t,a)}))})();