(()=>{const e=document.querySelector(".main__list"),t=document.querySelector(".main__button--submit"),n=document.querySelector(".main__balance"),a=document.querySelector(".main__income"),c=document.querySelector(".main__expenses");class i{static transactionsAcc=0;constructor(e,t,n){this.name=e,this.amount=t,void 0===n?(this.id=i.transactionsAcc,i.transactionsAcc+=1):this.id=n}static getBalanceInfo(){return{actual:i.cleanAmount(n.innerText),income:i.cleanAmount(a.innerText),expense:i.cleanAmount(c.innerText)}}static cleanAmount(e){return+e.replace(/([\sR$]+)/g,"")}static updateIncomeAmount(e,t){const c=i.cleanAmount(e),o=i.getBalanceInfo();let s,r;"increase"===t?(s=(c+o.income).toFixed(2),r=(c+o.actual).toFixed(2)):"decrease"===t&&(s=(o.income-c).toFixed(2),r=(o.actual-c).toFixed(2)),a.innerText=`R$ ${s}`,n.innerText=`R$ ${r}`}static updateExpenseAmount(e,t){const a=i.cleanAmount(e),o=i.getBalanceInfo();let s,r;"increase"===t?(s=(a+-o.expense).toFixed(2),r=(a+o.actual).toFixed(2)):"decrease"===t&&(s=o.expense+a,r=(o.actual-a).toFixed(2)),c.innerText=`R$ ${Math.abs(s).toFixed(2)}`,n.innerText=`R$ ${r}`}static retrieveTransactions(){Object.keys(localStorage).forEach((e=>{const t=JSON.parse(localStorage[e]),{name:n,amount:a,id:c}=t;console.log(t),new i(n,a,c).init()}))}static excludeTransactionFromLocal(e){localStorage.removeItem(e)}getTransactionType(){return this.amount.includes("-")?"expense":"income"}getFormatedAmount(){return"income"===this.getTransactionType()?`+ R$${this.amount}`:this.amount.replace("-","- R$")}createTransactionCard(){const e=document.createElement("li");return e.classList.add("main__transaction--card"),e.innerHTML=`\n      <div class="main--transaction--content">\n        <p class="main__name--transaction">${this.name}</p>\n        <span class="main__value--transaction">${this.getFormatedAmount(this.getTransactionType())}</span>\n      </div>\n      <div class="main--transaction--color ${this.getTransactionType()}"></div>\n    `,e}addTransactionCardEvent(e){e.addEventListener("dblclick",(e=>{const t=e.currentTarget.querySelector(".main__value--transaction").innerText;"income"===this.getTransactionType()?i.updateIncomeAmount(t,"decrease"):i.updateExpenseAmount(t,"decrease"),e.currentTarget.remove(),i.excludeTransactionFromLocal(this.id)}))}addTransactionIntoDom(){const t=this.createTransactionCard();e.appendChild(t),"income"===this.getTransactionType()?i.updateIncomeAmount(this.amount,"increase"):i.updateExpenseAmount(this.amount,"increase"),this.addTransactionCardEvent(t)}addTransactionIntoLocal(){localStorage.setItem(this.id,JSON.stringify(this))}init(){return this.name&&this.amount&&(this.addTransactionIntoDom(),this.addTransactionIntoLocal()),this}}i.retrieveTransactions(),t.addEventListener("click",(function(e){e.preventDefault();const t=document.querySelector("#name").value,n=document.querySelector("#value").value;new i(t,n).init()}))})();